# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages: # List of stages for jobs, and their order of execution
  - build
  - deploy

build:
  only:
    - main
  stage: build
  image: node:18
  script:
    - echo "Start building App"
    - node -v
    - npm -v
    - npm i -f
    - echo "Dependencies Install successfully! ðŸš€ "
    - npm run build
    - echo "Build successfully!"
  artifacts:
    expire_in: 1 hour
    paths:
      - build
      - node_modules

deploy:
  only:
    - main
  stage: deploy
  image: "${DEPLOY_IMAGE}"
  script:
    - echo $GCP_SERVICE_KEY > gcloud-service-key.json
    - gcloud auth activate-service-account --key-file gcloud-service-key.json
    - gcloud config set project $GCP_PROJECT_ID
    - sed -i "s/<GCP_SERVICE_NAME>/$GCP_SERVICE_NAME/g" app.yaml
    - sed -i "s/<GCP_SERVICE_RUNTIME>/$GCP_SERVICE_RUNTIME/g" app.yaml

    - gcloud app deploy --no-cache
